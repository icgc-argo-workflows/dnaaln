process {
    withName: 'SONG.*|SCORE.*' {
      ext.prefix = ""
      ext.transport_parallel = params.transport_parallel 
      ext.transport_mem = params.transport_mem
      ext.api_token = params.api_token
      ext.song_container_version = params.song_container_version
      ext.song_container = params.song_container
      ext.score_container_version = params.score_container_version
      ext.score_container = params.score_container
    }

    withName: 'SONG_GET|SCORE_DOWNLOAD' {
      ext.song_url = params.song_url_download ?: params.song_url
      ext.score_url = params.score_url_download ?: params.score_url
    }


    withName: 'SONG_SUBMIT|SONG_MANIFEST|SONG_PUBLISH|SCORE_UPLOAD' {
      ext.song_url = params.song_url_upload ?: params.song_url 
      ext.score_url = params.score_url_upload ?: params.score_url
    }

    withName: 'PAYLOAD_ALIGNMENT_M2' {
        publishDir       = [
            enabled : params.local,
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/alignment/bwamem2/${meta.id}"},
            pattern: "{*payload.json,out/*}",
            saveAs: { "${it}" }
        ]
    }
    withName: 'PAYLOAD_METRICS_M2' {
        publishDir       = [
            enabled : params.local,
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/qc/bwamem2/${meta.id}"},
            pattern: "{*payload.json,out/*}",
            saveAs: { "${it}" }
        ]
    }
    withName: 'PAYLOAD_ALIGNMENT_M' {
        publishDir       = [
            enabled : params.local,
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/alignment/bwamem/${meta.id}"},
            pattern: "{*payload.json,out/*}",
            saveAs: { "${it}" }
        ]
    }
    withName: 'PAYLOAD_METRICS_M' {
        publishDir       = [
            enabled : params.local,
            mode: params.publish_dir_mode,
            path: { "${params.outdir}/qc/bwamem/${meta.id}"},
            pattern: "{*payload.json,out/*}",
            saveAs: { "${it}" }
        ]
    }
}